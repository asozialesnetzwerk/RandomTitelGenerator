# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
    install-test:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2 # Checking out the repo

      - name: Install dependecies
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: install -d # Install all dependencies, including development ones
    
      - name: Test
        uses: VaultVulp/action-pipenv@v2.0.1
        with:
          command: "pipenv run python main.py"
      - uses: montudor/action-zip@v0.1.1
        with:
          args: zip -qq -r result.zip /  
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: result.zip
          asset_name: result.zip
          asset_content_type: zip
